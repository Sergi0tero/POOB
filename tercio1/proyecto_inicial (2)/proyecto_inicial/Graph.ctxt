#BlueJ class context
comment0.target=Graph
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Graph1\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=nodos\ arcos
comment1.target=Graph(int[],\ int[][])
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Graph1\r\n
comment2.params=origin
comment2.target=void\ initializeNations(int)
comment2.text=\r\n\ Metodo\ para\ inicializar\ el\ grafo\r\n
comment3.params=arc
comment3.target=void\ relax(int[])
comment3.text=\r\n\ Relaja\ los\ arcos\r\n
comment4.params=origen
comment4.target=java.util.HashMap\ bellmanFord(int)
comment4.text=\r\n\ Metodo\ que\ implementa\ algoritmo\ de\ Bellman\ Ford\r\n\ @param\ origin\ Desde\ que\ nacion\ quiero\ comparar\r\n
comment5.params=llave
comment5.target=java.util.HashMap\ get(int)
comment5.text=\r\n\ Metodo\ para\ acceder\ a\ las\ valores\ de\ nations\r\n\ @param\ llave,\ llave\ a\ la\ que\ queremos\ acceder\r\n\ @return\ HashMap\ con\ los\ datos\ de\ la\ llave\r\n
comment6.params=destino\ llave
comment6.target=double\ get(int,\ java.lang.String)
comment6.text=\r\n\ Metodo\ para\ acceder\ a\ las\ costos\ de\ nations\r\n\ @param\ destino,\ llave\ a\ le\ que\ accederemos\r\n\ @param\ llave,\ String\ del\ valor\ que\ queremos\ encontrar\r\n\ @return\ Costo,\ Infinity\ de\ lo\ contrario.\r\n
comment7.params=keys\ value
comment7.target=int\ indexCosto(java.util.ArrayList,\ double)
comment7.text=\r\n\ Metodo\ para\ acceder\ al\ costo\ de\ una\ llave\r\n\ @param\ keys\ ArrayList\ de\ las\ llaves\r\n\ @param\ value\ Valor\ que\ queremos\ comparar\r\n\ @return\ Indice\ donde\ se\ encuentra\ el\ valor,\ -1\ si\ no\ es\ encontrado\r\n
comment8.params=keys\ ind
comment8.target=java.util.ArrayList\ remove(java.util.ArrayList,\ int)
comment8.text=\r\n\ Metodo\ para\ remover\ elemento\ de\ ArrayList\r\n\ @param\ keys\ ArrayList\r\n\ @param\ ind\ elemento\ que\ queremos\ remover\r\n\ @return\ ArrayList\ sin\ el\ elemento\r\n
comment9.params=
comment9.target=int[]\ closeNeighbours()
comment9.text=\r\n\ Metodo\ para\ hallar\ los\ vecinos\ mas\ cercanos\ a\ la\ nacion\ origen\r\n\ @return\ retorna\ una\ lista\ de\ los\ vecinos\ mas\ cercanos\ al\ origen\ de\ forma\ ordenada.\r\n
numComments=10
