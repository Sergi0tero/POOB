#BlueJ class context
comment0.target=Graph
comment1.params=nodo
comment1.target=Graph(int)
comment1.text=\r\n\ Contructor\ del\ grafo\r\n\ \r\n\ @param\ nodo\ int\ cantidad\ de\ nodos\ (naciones)\r\n
comment10.params=
comment10.target=void\ reset()
comment10.text=\r\n\ Resetea\ peso,\ camino\ y\ los\ visitados\r\n\ \r\n
comment11.params=peso\ isVisited
comment11.target=int\ caminoMinimo(double[],\ boolean[])
comment11.text=\r\n\ Halla\ el\ camino\ minimo\r\n\ \r\n\ @param\ peso\ double[]\ peso\ de\ los\ caminos\ recorridos\r\n\ @param\ isVisited\ boolean[]\ lista\ de\ booleanos\ para\ saber\ si\ el\ nodo\ ya\ fue\ visitado\ o\ no\r\n
comment2.params=s
comment2.target=void\ addNation(java.lang.String)
comment2.text=\r\n\ A\u00F1ade\ cada\ vertice\ en\ un\ array\r\n\ \r\n\ @param\ s\ String\ color\ de\ la\ nacion\r\n
comment3.params=index
comment3.target=int\ getNodoInicial(int)
comment3.text=\r\n\ halla\ el\ nodo\ inicial\r\n\ \r\n\ @param\ index\ int\ indice\ del\ nodo\ inicial\r\n
comment4.params=index\ NodoInicial
comment4.target=int\ getSiguienteNodo(int,\ int)
comment4.text=\r\n\ halla\ el\ nodo\ siguiente\ al\ que\ estoy\r\n\ \r\n\ @param\ index\ int\ indice\ del\ nodo\ en\ el\ que\ estoy\r\n\ @param\ NodoInicial\ int\ indice\ del\ nodo\ siguiente\r\n
comment5.params=e1\ e2\ weight
comment5.target=void\ addRoutes(int,\ int,\ int)
comment5.text=\r\n\ Da\ el\ peso\ de\ un\ camino\ dependiendo\ de\ los\ indices\ de\ su\ inicio\ y\ fin\r\n\ \r\n\ @param\ e1\ int\ indice\ A\r\n\ @param\ e2\ int\ indice\ B\r\n\ @param\ weight\ int\ peso\ del\ camino\r\n
comment6.params=
comment6.target=double\ getPrecio()
comment6.text=\r\n\ Devuelve\ el\ costo\ minimo\ de\ un\ recorrido\r\n\ @return\ int\ el\ menor\ costo\ posible\r\n
comment7.params=actNat\ objNat
comment7.target=java.lang.String[]\ dijkstra(java.lang.String,\ java.lang.String)
comment7.text=\r\n\ Hace\ el\ recorrido\ Dijkstra\ a\ base\ de\ un\ nodo\r\n\ \r\n\ @param\ index\ int\ nacion\ inicial\r\n\ @param\ objNat\ String\ nacion\ objetivo\r\n
comment8.params=colorF
comment8.target=double\ getpeso(java.lang.String)
comment8.text=\r\n\ Retorna\ el\ peso\ del\ camino\ minimo\r\n\ \r\n\ @param\ colorF\ String\ nodo\ final\ del\ recorrido\r\n
comment9.params=colorF
comment9.target=java.lang.String[]\ getcamino(java.lang.String)
comment9.text=\r\n\ Retorna\ una\ lista\ de\ los\ nodos\ por\ los\ que\ paso\r\n\ \r\n\ @param\ colorF\ String\ nodo\ final\ del\ recorrido\r\n
numComments=12
